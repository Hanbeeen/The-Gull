"""
# Python 3.11.0 기반 이미지 사용
FROM python:3.11.0

# 필요한 패키지 설치 (envsubst, wget 포함)
RUN apt-get update && apt-get install -y gettext wget

# Python의 UTF-8 인코딩 설정
ENV PYTHONIOENCODING=utf-8

# 작업 디렉토리 설정
WORKDIR /project

# kubectl 설치
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/

# 필요한 파일들을 /project 디렉토리에 복사
COPY .env /project/.env
COPY init.yaml /project/init.yaml
COPY deploy.sh /project/deploy.sh
COPY ingress-nginx-controller.yaml /project/ingress-nginx-controller.yaml
COPY secret.yaml /project/secret.yaml
COPY deployment.yaml /project/deployment.yaml
COPY service.yaml /project/service.yaml
COPY ingress.yaml /project/ingress.yaml

# frp 다운로드 및 설치
RUN wget -O frp.tar.gz https://github.com/fatedier/frp/releases/download/v0.37.0/frp_0.37.0_linux_amd64.tar.gz && \
    tar -zxvf frp.tar.gz && \
    mv frp_0.37.0_linux_amd64/frpc /usr/local/bin/ && \
    rm -rf frp.tar.gz frp_0.37.0_linux_amd64

# deploy.sh에 실행 권한 부여
RUN chmod +x /project/deploy.sh

# requirements.txt 파일 복사 및 종속성 설치
COPY requirements.txt ./
RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

# Flask 환경 변수 설정
ENV FLASK_APP=slack_test.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=5000

# 컨테이너 시작 시 deploy.sh 스크립트를 실행하여 Kubernetes 리소스를 적용한 후 Flask 서버 실행
CMD ["/bin/bash", "/project/deploy.sh"]
"""