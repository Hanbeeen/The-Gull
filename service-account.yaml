# ServiceAccount 설정
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-sa
  namespace: default

---
# Role: ConfigMap, Secret, Service, Job, CronJob, Deployment, Ingress, Endpoints, EndpointSlices에 대한 작업 권한
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: deploy-role
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "services", "endpoints"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "create", "update", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "create", "update", "delete"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]

---
# RoleBinding 설정
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deploy-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deploy-role
subjects:
  - kind: ServiceAccount
    name: deploy-sa
    namespace: default

---
# ClusterRole for EndpointSlice Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: endpoint-slice-controller-role
rules:
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# ClusterRoleBinding for EndpointSlice Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: endpoint-slice-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: endpoint-slice-controller-role
subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
